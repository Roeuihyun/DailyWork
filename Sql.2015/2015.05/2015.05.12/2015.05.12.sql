/*+ 2.1.1 SQL 작성 표준*/

SELECT E.EMPLOYEE_ID,
       E.DEPARTMENT_ID,
       (SELECT D.DEPARTMENT_NAME
          FROM DEPARTMENTS D
         WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID)
          "부서명",
       E.JOB_ID,
       TRUNC (MONTHS_BETWEEN (SYSDATE, E.HIRE_DATE), 0) "근속월수"
  FROM EMPLOYEES E
 WHERE MONTHS_BETWEEN (SYSDATE, E.HIRE_DATE) > 90;


/*+ 2.1.1 SQL 작성 표준*/

SELECT EMPLOYEE_ID,
       FIRST_NAME,
       DEPARTMENT_ID,
       JOB_ID
  FROM EMPLOYEES
 WHERE (DEPARTMENT_ID = 30) OR (DEPARTMENT_ID = 80 AND JOB_ID LIKE 'S%');


/*+ 3.1.2 문자 데이터 타입*/

SELECT *
  FROM LOCATIONS
 WHERE COUNTRY_ID = 'US';

SELECT *
  FROM LOCATIONS
 WHERE STATE_PROVINCE = 'Texas';

/*+ 3.2.2 NULL 발생경우 :NULL과 산술연산 */

SELECT EMPLOYEE_ID EID,
       FIRST_NAME NM,
       SALARY SAL,
       COMMISSION_PCT CMS
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID = '30';

SELECT EMPLOYEE_ID EID,
       FIRST_NAME NM,
       SALARY SAL,
       COMMISSION_PCT CMS,
       SALARY * (1 + COMMISSION_PCT) TOT
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID = '30';

/*+ 3.2.2 NULL 발생경우 :아우터조인의 NULL*/

  SELECT A.EMPLOYEE_ID, A.FIRST_NAME, B.DEPARTMENT_NAME
    FROM EMPLOYEES A, DEPARTMENTS B
   WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID(+) AND A.JOB_ID = 'SA_REP'
ORDER BY A.EMPLOYEE_ID;

/*+ 3.2.2 NULL 발생경우 :스칼라서브쿼리의 NULL*/

  SELECT A.EMPLOYEE_ID,
         A.FIRST_NAME,
         (SELECT B.DEPARTMENT_NAME
            FROM DEPARTMENTS B
           WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID)
            "DEPARTMENT_NAME"
    FROM EMPLOYEES A
   WHERE A.JOB_ID = 'SA_REP'
ORDER BY A.EMPLOYEE_ID;

/*+ 3.2.2 NULL 발생경우 :그룹함수의 NULL*/

SELECT COUNT (*) CASE1,
       COUNT (SALARY) CASE2,
       COUNT (NULL) CASE3,
       SUM (SALARY) CASE4,
       MIN (SALARY) CASE5,
       MAX (SALARY) CASE6
  FROM EMPLOYEES
 WHERE 1 = 0;


/*+ 5.2.1 실행계획 개념 : 실행계획 해석방법*/

SELECT E.FIRST_NAME, D.DEPARTMENT_NAME
  FROM EMPLOYEES E, DEPARTMENTS D
 WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND E.FIRST_NAME = :NAME;


/*+ 5.2 SQL 실행계획 : 실습1*/

SELECT E.FIRST_NAME, D.DEPARTMENT_NAME
  FROM EMPLOYEES E, DEPARTMENTS D
 WHERE     E.DEPARTMENT_ID = D.DEPARTMENT_ID
       AND E.JOB_ID = 'SH_CLERK'
       AND D.LOCATION_ID = '1500';

/*+ 5.2 SQL 실행계획 : 실습3*/

  SELECT D.DEPARTMENT_NAME "부서명",
         L.CITY,
         ROUND (AVG (SALARY)) "평균연봉"
    FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
   WHERE     E.DEPARTMENT_ID = D.DEPARTMENT_ID
         AND D.LOCATION_ID = L.LOCATION_ID
         AND D.DEPARTMENT_ID IN (30, 50, 80)
         AND E.JOB_ID LIKE 'SA%'
GROUP BY D.DEPARTMENT_NAME, L.CITY
ORDER BY D.DEPARTMENT_NAME;

/*+ 5.3 인덱스 :인덱스가 사용되지 않는 경우*/

/*+ 1번*/

SELECT *
  FROM EMPLOYEES
 WHERE SUBSTR (LAST_NAME, 1, 3) = 'ABC';

SELECT *
  FROM EMPLOYEES
 WHERE LAST_NAME LIKE 'ABC%';

/*+ 2번*/

SELECT *
  FROM EMPLOYEES
 WHERE SALARY * 12 = 12000000;

SELECT *
  FROM EMPLOYEES
 WHERE SALARY = 12000000 / 12;

SELECT *
  FROM EMPLOYEES
 WHERE TO_CHAR (HIRE_DATE, 'YYYYMMDD') = '20020607';

SELECT *
  FROM EMPLOYEES
 WHERE HIRE_DATE = TO_DATE ('20020607', 'YYYYMMDD');

SELECT *
  FROM EMPLOYEES
 WHERE LAST_NAME IS NOT NULL;

SELECT *
  FROM EMPLOYEES
 WHERE PHONE_NUMBER IS NULL;

SELECT *
  FROM EMPLOYEES
 WHERE PHONE_NUMBER = '9999';

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE '%SH%';

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE 'SH%';



SELECT                                                        /*+USE_NL(A B)*/
      *
  FROM EMPLOYEES A, DEPARTMENTS B
 WHERE     A.DEPARTMENT_ID = B.DEPARTMENT_ID
       AND A.JOB_ID = 'PH_CLERK'
       AND B.LOCATION_ID = '1700';


SELECT                                                     /*+USE_MERGE(A B)*/
      *
  FROM EMPLOYEES A, DEPARTMENTS B
 WHERE     A.DEPARTMENT_ID = B.DEPARTMENT_ID
       AND A.JOB_ID = 'PH_CLERK'
       AND B.LOCATION_ID = '1700';

SELECT                                                      /*+USE_HASH(A B)*/
      *
  FROM EMPLOYEES A, DEPARTMENTS B
 WHERE     A.DEPARTMENT_ID = B.DEPARTMENT_ID
       AND A.JOB_ID = 'PH_CLERK'
       AND B.LOCATION_ID = '1700';

/*+ 5.2 SQL 실행계획 : 실행계획 확인하기*/

  SELECT                                                   /*+USE_MERGE(E,J)*/
        E.EMPLOYEE_ID,
         E.FIRST_NAME,
         E.HIRE_DATE,
         J.START_DATE,
         J.END_DATE,
         J.JOB_ID,
         E.DEPARTMENT_ID NEW_DPET,
         J.DEPARTMENT_ID OLD_DEPT
    FROM EMPLOYEES E, JOB_HISTORY J
   WHERE     E.EMPLOYEE_ID = J.EMPLOYEE_ID(+)
         AND E.DEPARTMENT_ID = J.DEPARTMENT_ID(+)
         AND J.DEPARTMENT_ID IN (30, 90)
ORDER BY E.EMPLOYEE_ID;

  SELECT                                                    /*+USE_HASH(E,J)*/
        E.EMPLOYEE_ID,
         E.FIRST_NAME,
         E.HIRE_DATE,
         J.START_DATE,
         J.END_DATE,
         J.JOB_ID,
         E.DEPARTMENT_ID NEW_DPET,
         J.DEPARTMENT_ID OLD_DEPT
    FROM EMPLOYEES E, JOB_HISTORY J
   WHERE     E.EMPLOYEE_ID = J.EMPLOYEE_ID(+)
         AND E.DEPARTMENT_ID = J.DEPARTMENT_ID(+)
         AND J.DEPARTMENT_ID IN (30, 90)
ORDER BY E.EMPLOYEE_ID;

  SELECT                                                      /*+USE_NL(E,J)*/
        E.EMPLOYEE_ID,
         E.FIRST_NAME,
         E.HIRE_DATE,
         J.START_DATE,
         J.END_DATE,
         J.JOB_ID,
         E.DEPARTMENT_ID NEW_DPET,
         J.DEPARTMENT_ID OLD_DEPT
    FROM EMPLOYEES E, JOB_HISTORY J
   WHERE     E.EMPLOYEE_ID = J.EMPLOYEE_ID(+)
         AND E.DEPARTMENT_ID = J.DEPARTMENT_ID(+)
         AND J.DEPARTMENT_ID IN (30, 90)
ORDER BY E.EMPLOYEE_ID;

/*+ 5.3인덱스 : 인덱스가 사용되지 않는 경우*/

/*CASE 1*/

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE '%SH%';

SELECT *
  FROM EMPLOYEES
 WHERE JOB_ID LIKE 'SH%';

/*CASE 2*/

  SELECT DEPARTMENT_ID, JOB_ID, SUM (SALARY)
    FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, JOB_ID
  HAVING DEPARTMENT_ID >= 100;

  SELECT DEPARTMENT_ID, JOB_ID, SUM (SALARY)
    FROM EMPLOYEES
   WHERE DEPARTMENT_ID >= 100
GROUP BY DEPARTMENT_ID, JOB_ID;


SELECT /*+USE_NL(E1,E2)*/
  E1.LAST_NAME,
  E1.EMPLOYEE_ID,
  E2.LAST_NAME,
  E2.EMPLOYEE_ID
FROM
  EMPLOYEES E1,
  EMPLOYEES E2
WHERE
  E1.MANAGER_ID = E2.EMPLOYEE_ID(+)
ORDER BY
  E1.EMPLOYEE_ID ASC;


SELECT /*+USE_HASH(E1,E2)*/
  E1.LAST_NAME,
  E1.EMPLOYEE_ID,
  E2.LAST_NAME,
  E2.EMPLOYEE_ID
FROM
  EMPLOYEES E1,
  EMPLOYEES E2
WHERE
  E1.MANAGER_ID = E2.EMPLOYEE_ID(+)
ORDER BY
  E1.EMPLOYEE_ID ASC;
  
  SELECT /*+USE_MERGE(E1,E2)*/
  E1.LAST_NAME,
  E1.EMPLOYEE_ID,
  E2.LAST_NAME,
  E2.EMPLOYEE_ID
FROM
  EMPLOYEES E1,
  EMPLOYEES E2
WHERE
  E1.MANAGER_ID = E2.EMPLOYEE_ID(+)
ORDER BY
  E1.EMPLOYEE_ID ASC;
  
 /* System계정 */ 
  
  
  /* System Global Area 정보 조회*/
SHOW SGA;

SELECT * FROM V$SGAINFO;

/* System Global Area  SHARED POOL 정보 조회*/

  SELECT NAME, BYTES
    FROM V$SGASTAT
   WHERE POOL = 'shared pool'
ORDER BY BYTES DESC;

/*Undo Segment 정보 조회*/
COL USERNAME FOR A10;

SELECT A.SID,
       A.SERIAL#,
       A.USERNAME,
       B.USED_UREC,
       B.USED_UBLK
  FROM V$SESSION A, V$TRANSACTION B
 WHERE A.SADDR = B.SES_ADDR;

SELECT TABLESPACE_NAME, RETENTION FROM DBA_TABLESPACES;

SHOW PARAMETER UNDO;

/*PGA 확인*/

SELECT PID,
       SPID,
       USERNAME,
       PGA_USED_MEM,
       PGA_ALLOC_MEM,
       PGA_MAX_MEM
  FROM V$PROCESS;
  
  
SELECT * FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'Steven'
AND LAST_NAME LIKE 'King';

UPDATE EMPLOYEES SET
EMAIL = 'KKING', SALARY =24999
WHERE FIRST_NAME LIKE 'Steven'
AND LAST_NAME LIKE 'King';



/*INDEX 유무  차이*/

CREATE INDEX "HR"."EMP_LAST_NAME_IX"  ON  "HR"."EMPLOYEES" ("LAST_NAME");

SELECT * FROM EMPLOYEES
WHERE SUBSTR(LAST_NAME,1,3) = 'ABC'

SELECT * FROM EMPLOYEES
WHERE LAST_NAME LIKE 'ABC%'

DROP INDEX "HR"."EMP_LAST_NAME_IX" ;

CREATE INDEX "HR"."EMP_SALARY_IX"  ON  "HR"."EMPLOYEES" ("SALARY");

SELECT * FROM EMPLOYEES
WHERE SALARY * 12 = 12000000;
  
SELECT * FROM EMPLOYEES
WHERE SALARY = 12000000/12;

DROP INDEX "HR"."EMP_SALARY_IX" ;

CREATE INDEX "HR"."EMP_HIRE_DATE_IX"  ON  "HR"."EMPLOYEES" ("HIRE_DATE");

SELECT * FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'YYYYMMDD') = '20020607';

SELECT * FROM EMPLOYEES
WHERE HIRE_DATE = TO_DATE('20020607','YYYYMMDD');

DROP INDEX "HR"."EMP_HIRE_DATE_IX" ;

CREATE INDEX "HR"."EMP_DEPARTMENT_ID_JOB_ID_IX"  ON  "HR"."EMPLOYEES" ("DEPARTMENT_ID","JOB_ID");

SELECT * FROM EMPLOYEES
WHERE DEPARTMENT_ID||JOB_ID ='10SALESMAN';

SELECT * FROM EMPLOYEES
WHERE DEPARTMENT_ID = 10 
    AND JOB_ID = 'SALESMAN';

DROP INDEX "HR"."EMP_DEPARTMENT_ID_JOB_ID_IX" ;



