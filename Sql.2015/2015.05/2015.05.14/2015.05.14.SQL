/*4.SQL 작성 응용*/

/*4.1 조인*/

/*4.1.1 조인 개념 : ANSI SQL 특징, 벤더 독립 SQL 특징의 예제*/

/* ORACLE SQL*/

SELECT E.EMPLOYEE_ID,
       E.FIRST_NAME,
       E.LAST_NAME,
       D.DEPARTMENT_ID,
       D.LOCATION_ID
  FROM EMPLOYEES E, DEPARTMENTS D
 WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

/*ANSI SQL*/

SELECT EMPLOYEES.EMPLOYEE_ID,
       EMPLOYEES.FIRST_NAME,
       EMPLOYEES.LAST_NAME,
       DEPARTMENTS.DEPARTMENT_ID,
       DEPARTMENTS.LOCATION_ID
  FROM    EMPLOYEES
       JOIN
          DEPARTMENTS
       ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

/*4.1 조인 PAGE 25/92 실습*/

SELECT E.EMPLOYEE_ID,
       E.FIRST_NAME,
       E.LAST_NAME,
       D.DEPARTMENT_NAME,
       L.CITY
  FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
 WHERE     E.DEPARTMENT_ID = D.DEPARTMENT_ID
       AND D.LOCATION_ID = L.LOCATION_ID
       AND E.JOB_ID = 'FI_ACCOUNT';

/*4.1 조인 PAGE 26/92 실습*/

  SELECT E.EMPLOYEE_ID,
         E.FIRST_NAME,
         E.LAST_NAME,
         D.DEPARTMENT_NAME,
         L.CITY
    FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
   WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND D.LOCATION_ID = L.LOCATION_ID
ORDER BY E.DEPARTMENT_ID ASC;

/*4.1 조인 PAGE 27/92 실습*/

SELECT E.EMPLOYEE_ID "사번",
       E.LAST_NAME "이름",
       J.MIN_SALARY "최소연봉"
  FROM EMPLOYEES E, JOBS J
 WHERE     E.DEPARTMENT_ID = 30
       AND E.JOB_ID = J.JOB_ID(+)
       AND NVL (J.MIN_SALARY, 5000) > 3000;

SELECT E.EMPLOYEE_ID "사번",
       E.LAST_NAME "이름",
       J.MIN_SALARY "최소연봉"
  FROM EMPLOYEES E, JOBS J
 WHERE     E.DEPARTMENT_ID = 30
       AND E.JOB_ID = J.JOB_ID(+)
       AND NVL (J.MIN_SALARY(+), 5000) > 3000;

/*4.1 조인 PAGE 37/92 연습문제*/

  SELECT E1.FIRST_NAME,
         E1.EMPLOYEE_ID,
         E2.FIRST_NAME,
         E2.EMPLOYEE_ID
    FROM EMPLOYEES E1, EMPLOYEES E2
   WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID(+)
ORDER BY E1.EMPLOYEE_ID ASC;

/*4.1 조인 PAGE 38/92 연습문제*/

  SELECT E1.FIRST_NAME,
         E1.HIRE_DATE,
         E2.FIRST_NAME,
         E2.HIRE_DATE
    FROM EMPLOYEES E1, EMPLOYEES E2
   WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID AND E1.HIRE_DATE < E2.HIRE_DATE
ORDER BY E1.EMPLOYEE_ID ASC;

/*4.1 조인 PAGE 71/92 연습문제*/

SELECT E1.EMPLOYEE_ID, E1.LAST_NAME, E1.SALARY
  FROM EMPLOYEES E1
 WHERE E1.DEPARTMENT_ID IN
          (SELECT E2.DEPARTMENT_ID
             FROM EMPLOYEES E2
            WHERE UPPER(E2.FIRST_NAME) = '%U%'
                  AND E1.EMPLOYEE_ID = E2.EMPLOYEE_ID
                  AND E2.SALARY > (SELECT AVG (SALARY) FROM EMPLOYEES));
                  
SELECT   E1.EMPLOYEE_ID, E1.LAST_NAME, E1.SALARY
  FROM EMPLOYEES E1
  WHERE E1.DEPARTMENT_ID IN ()               

SELECT E1.EMPLOYEE_ID, E1.LAST_NAME, E1.SALARY
FROM EMPLOYEES E1
WHERE E1.DEPARTMENT_ID IN(
SELECT DISTINCT E2.DEPARTMENT_ID
FROM EMPLOYEES E2
WHERE E2.SALARY>(SELECT AVG (SALARY) FROM EMPLOYEES)
AND UPPER(E2.FIRST_NAME) LIKE '%U%'
AND 
);