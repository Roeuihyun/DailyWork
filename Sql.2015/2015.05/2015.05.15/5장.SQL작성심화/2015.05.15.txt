SGA(System Global Area)
여러 메모리로 구성 (공유풀 데이터베이스버퍼캐시, redo log, 버퍼 대용량 풀)

Shared Pool 가장 최근 사용된 sql문 데이타의 정의를 저장
(SQL문 : 라이브러리캐시,데이타 : 데이타딕셔너리 캐시 메모리구조)

Library Cache
최근사용된 SQL문, PL/SQL문에 대한 정보를 저장하고 LRU 알고리즘에 의해 관리되며 SQL 영역과 PL/SQL 영역을 공유한다.

Data Dictionary Cache
가장 최근에 사용된 정의 모음, 데이터베이스파일 및 테이블, 인덱스, 열, 사용자 권한 및 기타 데이터 베이스 객체 정보를 가지고 있다.

Database Buffer Cache
데이터 파일에서 검색된 데이타 블록의 복사본을 저장
동적 크기 조정

redo log buffer
데이터베이스내 데이타 블럭의 모든 변경사항을 기록을 하며 복구를 위한 목적이 크다.

Large Pool
SGA의 선택적 메모리 영역으로 공유풀의 부담을 줄인다.

JAVA Pool
JAVA 명령을 위한 구문, 분석사항을 제공 하며 선택적 설정으로 JAVA를 설치 사용할 경우 필요하다.

프로세스 영역
사용자 프로세스 + 서버 프로세스 + 백그라운드 프로세스 로 이루어짐

사용자 프로세스
Oracle 서버와 상호작용을 요청하는 프로그램(토드,피엘 에스큐엘, 오렌지)

서버 프로세스
Oracle Instance에 접속된 사용자가 세션 설정때 시작됨

1.Nested Loop Join을 사용하는 경우
(1) 부분범위 처리시 유리
(2) Join 되는 테이블이 상호 의존적인 경우(종속성)
(3) 처리량이 적은 경우
(4) Driving Table의 선택이 관건(방향성)
(5) 주로 랜덤 액세스 방식으로 처리된다.(랜덤액세스)
(6) 후행 테이블의 조인컬럼의 인덱스의 유무 및 조건의 인덱스 참여의 정도에 따라 수행속도가 많이 차이 난다.(연결고리 상태)

2.Sort Merge Join을 사용하는 경우
(1) Equi-join에 대해서만 가능 순서는 상관이 없다(무방향성)
(2) HINT USE_MERGE를 사용해서 일반적으로 구현
(3) SORT 하는 작업을 수행
(4) 전체처리를 할 경우

3.Hash Join을 사용하는 경우
(1) Equi-join에 대해서만 가능 
(2) HINT USE_HASH를 사용해서 일반적으로 구현
(3) 작은 Table 과 큰 Table의 Join시에 유리 보통 작은 Table이 선행으로 온다.
(4) Cost-Based 옵티마이저를 사용할 경우만 Hash Join
(5) 전체처리를 할 경우 Full Table Scan 시 유리

