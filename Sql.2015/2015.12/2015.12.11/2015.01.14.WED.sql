--실습1

SELECT * FROM TAB;

SELECT * FROM EMPLOYEES;

SELECT * FROM JOBS;

SELECT JOB_ID , SUM(SALARY) FROM EMPLOYEES
WHERE JOB_ID NOT LIKE '%_REP'
GROUP BY JOB_ID
HAVING SUM(SALARY)>13000
ORDER BY SUM(SALARY);


--실습2
SELECT A.TABLE_NAME 테이블명, C.COMMENTS, A.COLUMN_NAME 컬럼명, B.COMMENTS,
       A.DATA_TYPE 데이터타입, A.DATA_LENGTH 데이터길이, A.DATA_PRECISION 숫자형자리수,
       A.DATA_SCALE 소수점자리수, A.NULLABLE NULL허용 , A.COLUMN_ID 컬럼순서,
       A.DATA_DEFAULT DEFAULT값
FROM ALL_TAB_COLUMNS A, ALL_COL_COMMENTS B , ALL_TAB_COMMENTS C
WHERE A.OWNER ='HR' AND A.TABLE_NAME = 'DEPARTMENTS'
AND A.OWNER = B.OWNER(+) AND A.TABLE_NAME = B.TABLE_NAME(+)
AND A.COLUMN_NAME = B.COLUMN_NAME(+)
AND A.OWNER = C.OWNER (+) AND A.TABLE_NAME = C.TABLE_NAME (+)
ORDER BY A.TABLE_NAME, A.COLUMN_ID;

--(+) OUTERJOIN
--(+)된 쪽은 결과가 없어도(NULL)이여도 결과가 출력되길 원함

--실습3
SELECT A.ITEMID "상품ID",
       A.ITEMNAME "상품명",
       COUNT(B.QUANTITY) "구매수량",
       SUM(B.AMOUNT) "구매총액"
  FROM (SELECT A.NAME,
               A.ORDERID,
               A.ORDERDATE,
               A.TOTALAMOUNT,
               C.QUANTITY,
               C.AMOUNT,
               D.ITEMID,
               D.NAME AS ITEMNAME
          FROM (SELECT *
                  FROM (SELECT A.NAME, B.ORDERID, B.ORDERDATE, B.TOTALAMOUNT
                          FROM MEMBER A, ORDERS B
                         WHERE A.MEMBERID = B.MEMBERID
                           AND A.NAME = '김태희'
                           AND A.ADDRESS1 LIKE '경기%'
                         ORDER BY B.ORDERDATE DESC)
                 WHERE ROWNUM <= 5) A,
               ORDER_ITEM C,
               ITEM D
         WHERE A.ORDERID = C.ORDERID
           AND C.ITEMID = D.ITEMID
         ORDER BY A.ORDERDATE DESC) A,
       ORDER_ITEM B,
       ORDERS C
 WHERE A.ITEMID = B.ITEMID
   AND B.ORDERID = C.ORDERID
   AND C.ORDERDATE LIKE '201206%'
 GROUP BY A.ITEMID, A.ITEMNAME;


--파악한 의미:김태희가 경기도 주소에서  주문 번호, 주문일, 주문 총액 정보 와 주문 물품 테이블과 물건 테이블의 정보를 토대로 주문일이 2012년06월에 주문 물품의 상품ID, 상품명, 구매 수량, 구매 총액을 구한다.

--실습4
--SELECT * FROM JOB_HISTORY;

SELECT EMPLOYEE_ID, JOB_ID, END_DATE
FROM JOB_HISTORY
WHERE NVL(TO_CHAR(END_DATE,'YYYY/MM/DD'),0) NOT IN '2006/07/24';


SELECT EMPLOYEE_ID, JOB_ID, END_DATE
FROM JOB_HISTORY
WHERE TO_CHAR(END_DATE,'YYYY/MM/DD') NOT IN '2006/07/24' OR TO_CHAR(END_DATE,'YYYY/MM/DD') IS NULL;

SELECT EMPLOYEE_ID, JOB_ID, END_DATE
FROM JOB_HISTORY
WHERE END_DATE <> TO_DATE('20060724','YYYYMMDD')
OR    END_DATE IS NULL;

--실습5

--사전실습1
SELECT *
  FROM (SELECT EMPLOYEE_ID, FIRST_NAME
          FROM EMPLOYEES
         WHERE DEPARTMENT_ID = '50'
            OR DEPARTMENT_ID = '80'
         ORDER BY FIRST_NAME)
 WHERE ROWNUM < 5;

SELECT *
  FROM (SELECT EMPLOYEE_ID, FIRST_NAME
          FROM EMPLOYEES
         WHERE DEPARTMENT_ID IN ('50', '80')
         ORDER BY FIRST_NAME)
 WHERE ROWNUM < 5;

--사전실습2
SELECT E.EMPLOYEE_ID, E.FIRST_NAME 
  FROM (SELECT EMPLOYEE_ID, FIRST_NAME, ROWNUM AS RNUM FROM EMPLOYEES ORDER BY EMPLOYEE_ID) E
 WHERE E.RNUM > 5
   AND E.RNUM <= 10;

실습6

--문자함수
SELECT EMPLOYEE_ID,
       CONCAT(FIRST_NAME, LAST_NAME) AS NAME,
       JOB_ID,
       LENGTH(LAST_NAME),
       INSTR(CONCAT(FIRST_NAME, LAST_NAME), 'E') AS "CONTAIONS'E'?"
  FROM EMPLOYEES
 WHERE JOB_ID LIKE 'AD%';

--숫자함수
SELECT EMPLOYEE_ID, DEPARTMENT_ID, JOB_ID, SALARY, COMMISSION_PCT
  FROM EMPLOYEES
 WHERE COMMISSION_PCT NOT IN FLOOR(COMMISSION_PCT);

--닐찌함수
SELECT EMPLOYEE_ID,
       HIRE_DATE,
       MONTHS_BETWEEN(SYSDATE, HIRE_DATE) AS "근속월수",
       ADD_MONTHS(HIRE_DATE, 6) AS "평가기준일",
       NEXT_DAY(HIRE_DATE, '금요일') AS NEXT,
       LAST_DAY(HIRE_DATE) AS LAST
  FROM EMPLOYEES
 WHERE MONTHS_BETWEEN(SYSDATE, HIRE_DATE) < 150
 ORDER BY EMPLOYEE_ID;

--날짜함수
SELECT EMPLOYEE_ID,
       TRUNC(HIRE_DATE, 'MONTH') AS "최종합격통보일",
       HIRE_DATE AS "입사일",
       TRUNC(LAST_DAY(ADD_MONTHS(HIRE_DATE, 1)), 'MONTH') AS "부서배치일"
  FROM EMPLOYEES
 ORDER BY EMPLOYEE_ID;

실습7
--연습문제 JOIN
SELECT E1.LAST_NAME, E1.EMPLOYEE_ID, E2.LAST_NAME, E2.EMPLOYEE_ID
  FROM EMPLOYEES E1, EMPLOYEES E2
 WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID(+)
 ORDER BY E1.EMPLOYEE_ID ASC;

--연습문제 JOIN
SELECT E1.LAST_NAME, E1.HIRE_DATE, E2.LAST_NAME, E2.HIRE_DATE
  FROM EMPLOYEES E1, EMPLOYEES E2
 WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID
   AND E1.HIRE_DATE < E2.HIRE_DATE;

-- 2 DECODE함수 응용

SELECT RN,
       DECODE(MOD(EMPLOYEE_ID, 3), 0, EMPLOYEE_ID) AS NO1,
       DECODE(MOD(EMPLOYEE_ID, 3), 0, FIRST_NAME) AS NM1,
       DECODE(MOD(EMPLOYEE_ID, 3), 1, EMPLOYEE_ID) AS NO2,
       DECODE(MOD(EMPLOYEE_ID, 3), 1, FIRST_NAME) AS NM2,
       DECODE(MOD(EMPLOYEE_ID, 3), 2, EMPLOYEE_ID) AS NO3,
       DECODE(MOD(EMPLOYEE_ID, 3), 2, FIRST_NAME) AS NM3
  FROM (SELECT E.EMPLOYEE_ID, E.FIRST_NAME, CEIL(ROWNUM / 3) AS RN
          FROM EMPLOYEES E
         WHERE DEPARTMENT_ID = 30);

-- 3 DECODE함수 응용
SELECT RN,
       MAX(NO1) NO1,
       MAX(NM1) NM1,
       MAX(NO2) NO2,
       MAX(NM2) NM2,
       MAX(NO3) NO3,
       MAX(NM3) NM3
  FROM (SELECT RN RN,
               DECODE(MOD_RN, 1, EMPLOYEE_ID) NO1,
               DECODE(MOD_RN, 1, FIRST_NAME) NM1,
               DECODE(MOD_RN, 2, EMPLOYEE_ID) NO2,
               DECODE(MOD_RN, 2, FIRST_NAME) NM2,
               DECODE(MOD_RN, 0, EMPLOYEE_ID) NO3,
               DECODE(MOD_RN, 0, FIRST_NAME) NM3
          FROM (SELECT CEIL(ROWNUM / 3) RN,
                       MOD(ROWNUM, 3) MOD_RN,
                       EMPLOYEE_ID,
                       FIRST_NAME
                  FROM EMPLOYEES
                 WHERE DEPARTMENT_ID = 30))
 GROUP BY RN;